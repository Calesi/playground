import type { NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/trpc";
import type { inferProcedureOutput } from "@trpc/server";
import type { AppRouter } from "../server/api/root";
import { SignInButton, SignOutButton, useAuth } from "@clerk/nextjs";
import { useState } from "react";

const ProcuctCard: React.FC<{
  pbItem: inferProcedureOutput<AppRouter["pbeScrape"]["all"]>[number];
  onItemDelete?: () => void;
}> = ({ pbItem, onItemDelete }) => {
  return (
    <div className=" h-auto w-auto rounded-lg border-2 border-gray-500 p-4 transition-all">
      <h2 className="text-2xl font-bold text-[hsl(280,100%,70%)]">
        {pbItem.title}
      </h2>
      <p>Normal Price: {pbItem.normalPrice}</p>
      <p>Affordable Price: {pbItem.affordablePrice}</p>
      <div>
        <span
          className="cursor-pointer text-sm font-bold uppercase text-pink-400"
          onClick={onItemDelete}
        >
          Delete
        </span>
      </div>
    </div>
  );
};

const CreatePostForm: React.FC = () => {
  const utils = api.useContext();

  const [url, setUrl] = useState("");

  const { mutate, error } = api.pbeScrape.create.useMutation({
    async onSuccess() {
      setUrl("");
      await utils.pbeScrape.all.invalidate();
    },
  });

  return (
    <div className="flex w-full max-w-2xl flex-col p-4">
      <input
        className="mb-2 rounded bg-white/10 p-2 text-white"
        value={url}
        onChange={(e) => setUrl(e.target.value)}
        placeholder="PB Tech Url"
      />
      <button
        className="rounded bg-pink-400 p-2 font-bold"
        onClick={() => {
          mutate({
            url,
          });
        }}
      >
        Create
      </button>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useAuth();
  const pbeScrapeQuery = api.pbeScrape.all.useQuery();

  const deleteItemMutation = api.pbeScrape.delete.useMutation({
    onSettled: () => pbeScrapeQuery.refetch(),
  });
  return (
    <>
      <Head>
        <title>Affordable Computers Price Checker</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen flex-col items-center overflow-hidden bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <div className="container flex flex-col items-center justify-center gap-12 overflow-hidden px-4 py-8">
          <h1 className="text-5xl font-extrabold tracking-tight sm:text-[5rem]">
            Affordable Computers Price Checker
          </h1>

          <div>
            {!user.isSignedIn && <SignInButton />}
            {!!user.isSignedIn && <SignOutButton />}
          </div>
          {!!user.isSignedIn && (
            <>
              <CreatePostForm />
              <div className="flex h-[60vh] justify-center overflow-y-auto px-4 text-2xl">
                {pbeScrapeQuery.data ? (
                  <div className="flex grid-rows-3 flex-col gap-4">
                    {pbeScrapeQuery.data?.map((p) => {
                      return (
                        <ProcuctCard
                          key={p.id}
                          pbItem={p}
                          onItemDelete={() => deleteItemMutation.mutate(p.id)}
                        />
                      );
                    })}
                  </div>
                ) : (
                  <p>Loading..</p>
                )}
              </div>
            </>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
