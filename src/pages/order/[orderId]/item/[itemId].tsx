import { useAuth } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { PbItemDescription } from "~/components/pbItemDescription";
import { api } from "~/utils/trpc";

const Item = () => {
  const router = useRouter();
  const itemId = router.asPath.match(/[^/]*$/)?.[0] ?? "";
  const orderId = router.asPath.match(/\/order\/([^/]+)\/item/)?.[1];
  const user = useAuth();

  if (typeof itemId !== "string") {
    return <div></div>;
  }
  const pbItemQuery = api.pbItem.byId.useQuery(itemId);

  const { mutate } = api.pbItem.delete.useMutation({
    onSettled: () => router.push("/"),
  });

  return (
    <>
      <Head>
        <title>Affordable Computers Price Checker</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center overflow-hidden bg-gradient-to-r from-[#2e026d] to-[#15162c] bg-auto text-white">
        <div className="container flex flex-col items-center justify-center gap-12 overflow-hidden px-4 py-8">
          <h1 className="text-5xl font-extrabold tracking-tight sm:text-[5rem]">
            <Link href={"/"}>Affordable Computers Price Checker</Link>
          </h1>
          {!!user.isSignedIn && (
            <>
              {pbItemQuery.data ? (
                <>
                  <h3>Item: {pbItemQuery.data.title}</h3>
                  <table className="table-fixed border-separate border-spacing-2 border border-slate-500">
                    <thead>
                      <tr>
                        <th className="w-96">Description</th>
                        <th className="w-96">Normal Price</th>
                        <th className="w-96">Affordable Price</th>
                        <th className="w-36"></th>
                      </tr>
                    </thead>

                    {pbItemQuery.data.id ? (
                      <PbItemDescription
                        pbItem={pbItemQuery.data}
                        onItemDelete={() =>
                          pbItemQuery.data && mutate(pbItemQuery.data.id)
                        }
                      />
                    ) : (
                      <p>Loading..</p>
                    )}
                  </table>
                </>
              ) : (
                <p>Loading..</p>
              )}
            </>
          )}
        </div>
      </main>
    </>
  );
};

export default Item;
